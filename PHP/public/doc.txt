The design is fairly simple.

1. Clicks data is processing by cron.
You may need to add

* * * * * php /path-to-your-project/artisan schedule:run >> /dev/null 2>&1

entry to the crontab as mentioned here https://laravel.com/docs/5.4/scheduling#introduction

or simply run in console

php artisan process:clicks

Cron job assumed to be launched every 5 minutes.

2. It fills transactions and updates day_balances tables.
The first one keeps information about transactions and the second one the day balances by the end of each day.

In order to calculate the balance amount of every transaction, at the moment of an API call it sums these 3 summands:
1) The sum of all balances of previous days for the requested day.
2) The sum of all previous transactions for the given one on that day.
3) The amount of the given transaction.

3. Rounding
All rounding operations happen at the moment of a page request.
1. Every single transaction rounds down and then the drop are going to the next transaction.
2. For the drop coming from the previous day I:
1) Calculate the last balance amount for this day.
2) Calculate the difference between rounded balance and the real one.
3) Perform new calculation considering this difference.

